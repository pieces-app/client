/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferencedConversation } from './ReferencedConversation';
import {
    ReferencedConversationFromJSON,
    ReferencedConversationFromJSONTyped,
    ReferencedConversationToJSON,
} from './ReferencedConversation';
import type { ReferencedAsset } from './ReferencedAsset';
import {
    ReferencedAssetFromJSON,
    ReferencedAssetFromJSONTyped,
    ReferencedAssetToJSON,
} from './ReferencedAsset';

/**
 * This is currently only used within /assets/steam/identifiers && /conversations/steam/identifiers but can be used with other as well, if we want to expand this class.
 * @export
 * @interface StreamedIdentifier
 */
export interface StreamedIdentifier {
    /**
     * 
     * @type {ReferencedAsset}
     * @memberof StreamedIdentifier
     */
    asset?: ReferencedAsset;
    /**
     * 
     * @type {ReferencedConversation}
     * @memberof StreamedIdentifier
     */
    conversation?: ReferencedConversation;
    /**
     * This is a specific bool that will let us know if we deleted an Identifierfrom the db.
     * @type {boolean}
     * @memberof StreamedIdentifier
     */
    deleted?: boolean;
}

/**
 * Check if a given object implements the StreamedIdentifier interface.
 */
export function instanceOfStreamedIdentifier(value: object): value is StreamedIdentifier {
    return true;
}

export function StreamedIdentifierFromJSON(json: any): StreamedIdentifier {
    return StreamedIdentifierFromJSONTyped(json, false);
}

export function StreamedIdentifierFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamedIdentifier {
    if (json == null) {
        return json;
    }
    return {
        
        'asset': json['asset'] == null ? undefined : ReferencedAssetFromJSON(json['asset']),
        'conversation': json['conversation'] == null ? undefined : ReferencedConversationFromJSON(json['conversation']),
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
    };
}

export function StreamedIdentifierToJSON(value?: StreamedIdentifier | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'asset': ReferencedAssetToJSON(value['asset']),
        'conversation': ReferencedConversationToJSON(value['conversation']),
        'deleted': value['deleted'],
    };
}

