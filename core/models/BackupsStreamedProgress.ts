/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BackupStreamedProgress } from './BackupStreamedProgress';
import {
    BackupStreamedProgressFromJSON,
    BackupStreamedProgressFromJSONTyped,
    BackupStreamedProgressToJSON,
} from './BackupStreamedProgress';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';

/**
 * This is used in the backups plural stream to stream the changes to all the restorations and backups in progress.
 * @export
 * @interface BackupsStreamedProgress
 */
export interface BackupsStreamedProgress {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof BackupsStreamedProgress
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {Array<BackupStreamedProgress>}
     * @memberof BackupsStreamedProgress
     */
    backups?: Array<BackupStreamedProgress>;
    /**
     * 
     * @type {Array<BackupStreamedProgress>}
     * @memberof BackupsStreamedProgress
     */
    restorations?: Array<BackupStreamedProgress>;
}

/**
 * Check if a given object implements the BackupsStreamedProgress interface.
 */
export function instanceOfBackupsStreamedProgress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BackupsStreamedProgressFromJSON(json: any): BackupsStreamedProgress {
    return BackupsStreamedProgressFromJSONTyped(json, false);
}

export function BackupsStreamedProgressFromJSONTyped(json: any, ignoreDiscriminator: boolean): BackupsStreamedProgress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'backups': !exists(json, 'backups') ? undefined : ((json['backups'] as Array<any>).map(BackupStreamedProgressFromJSON)),
        'restorations': !exists(json, 'restorations') ? undefined : ((json['restorations'] as Array<any>).map(BackupStreamedProgressFromJSON)),
    };
}

export function BackupsStreamedProgressToJSON(value?: BackupsStreamedProgress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'backups': value.backups === undefined ? undefined : ((value.backups as Array<any>).map(BackupStreamedProgressToJSON)),
        'restorations': value.restorations === undefined ? undefined : ((value.restorations as Array<any>).map(BackupStreamedProgressToJSON)),
    };
}

