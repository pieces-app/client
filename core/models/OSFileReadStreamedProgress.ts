/* tslint:disable */
/* eslint-disable */
/**
 * Pieces Isomorphic OpenAPI
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmbeddedModelSchema } from './EmbeddedModelSchema';
import {
    EmbeddedModelSchemaFromJSON,
    EmbeddedModelSchemaFromJSONTyped,
    EmbeddedModelSchemaToJSON,
} from './EmbeddedModelSchema';
import type { ModelDownloadProgressStatusEnum } from './ModelDownloadProgressStatusEnum';
import {
    ModelDownloadProgressStatusEnumFromJSON,
    ModelDownloadProgressStatusEnumFromJSONTyped,
    ModelDownloadProgressStatusEnumToJSON,
} from './ModelDownloadProgressStatusEnum';
import type { TransferableBytes } from './TransferableBytes';
import {
    TransferableBytesFromJSON,
    TransferableBytesFromJSONTyped,
    TransferableBytesToJSON,
} from './TransferableBytes';

/**
 * This is a model to return stream progress for a file read.
 * @export
 * @interface OSFileReadStreamedProgress
 */
export interface OSFileReadStreamedProgress {
    /**
     * 
     * @type {EmbeddedModelSchema}
     * @memberof OSFileReadStreamedProgress
     */
    schema?: EmbeddedModelSchema;
    /**
     * 
     * @type {ModelDownloadProgressStatusEnum}
     * @memberof OSFileReadStreamedProgress
     */
    status: ModelDownloadProgressStatusEnum;
    /**
     * Optionally if the download is in progress you will receive a download percent(from 0-100).
     * @type {number}
     * @memberof OSFileReadStreamedProgress
     */
    percentage?: number | null;
    /**
     * 
     * @type {string}
     * @memberof OSFileReadStreamedProgress
     */
    path: string;
    /**
     * This is a generated UUID that represents this current stream in progress(can be used to cancel this in the future)
     * @type {string}
     * @memberof OSFileReadStreamedProgress
     */
    id: string;
    /**
     * 
     * @type {TransferableBytes}
     * @memberof OSFileReadStreamedProgress
     */
    bytes?: TransferableBytes;
}

/**
 * Check if a given object implements the OSFileReadStreamedProgress interface.
 */
export function instanceOfOSFileReadStreamedProgress(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function OSFileReadStreamedProgressFromJSON(json: any): OSFileReadStreamedProgress {
    return OSFileReadStreamedProgressFromJSONTyped(json, false);
}

export function OSFileReadStreamedProgressFromJSONTyped(json: any, ignoreDiscriminator: boolean): OSFileReadStreamedProgress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schema': !exists(json, 'schema') ? undefined : EmbeddedModelSchemaFromJSON(json['schema']),
        'status': ModelDownloadProgressStatusEnumFromJSON(json['status']),
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
        'path': json['path'],
        'id': json['id'],
        'bytes': !exists(json, 'bytes') ? undefined : TransferableBytesFromJSON(json['bytes']),
    };
}

export function OSFileReadStreamedProgressToJSON(value?: OSFileReadStreamedProgress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schema': EmbeddedModelSchemaToJSON(value.schema),
        'status': ModelDownloadProgressStatusEnumToJSON(value.status),
        'percentage': value.percentage,
        'path': value.path,
        'id': value.id,
        'bytes': TransferableBytesToJSON(value.bytes),
    };
}

